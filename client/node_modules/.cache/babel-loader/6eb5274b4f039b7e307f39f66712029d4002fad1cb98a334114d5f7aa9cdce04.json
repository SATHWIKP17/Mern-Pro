{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sathw\\\\new22.app\\\\frontend\\\\src\\\\new.js\",\n  _s = $RefreshSig$();\nimport Webcam from 'react-webcam';\nimport React from 'react';\nimport './App.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Ff() {\n  _s();\n  const [img, setImg] = useState([]);\n  const winref = useRef(null);\n  const [camera, setCamera] = useState(false);\n  const [im, setIm] = useState(false);\n  function capt() {\n    let im = winref.current.getScreenshot();\n    setImg(prev => [...prev, im]);\n  }\n  function cc() {\n    setCamera(true);\n  }\n  function ca() {\n    setIm(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d2\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: winref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d2\",\n      children: [\"if(camera)\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cc,\n        children: \"CAPTURE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capt,\n        children: \"CLICK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ca,\n        children: \"SHOW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Ff, \"EH41s/EOtnmuU3/MsTHsbxOfHZc=\");\n_c = Ff;\nexport default Ff;\nvar _c;\n$RefreshReg$(_c, \"Ff\");","map":{"version":3,"names":["Webcam","React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Ff","_s","img","setImg","winref","camera","setCamera","im","setIm","capt","current","getScreenshot","prev","cc","ca","children","className","audio","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sathw/new22.app/frontend/src/new.js"],"sourcesContent":["import Webcam from 'react-webcam';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { useRef, useState } from 'react';\r\nfunction Ff() {\r\n    const [img, setImg] = useState([]);\r\n    const winref = useRef(null);\r\n    const [camera, setCamera] = useState(false);\r\n    const [im, setIm] = useState(false);\r\n    function capt() {\r\n        let im = winref.current.getScreenshot();\r\n        setImg((prev) =>\r\n            [...prev, im]\r\n        )\r\n    }\r\n    function cc() {\r\n        setCamera(true);\r\n    }\r\n    function ca() {\r\n        setIm(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"d2\">\r\n                <Webcam audio={false} ref={winref} />\r\n            </div>\r\n            <div className=\"d2\">\r\n                if(camera){\r\n                    <button onClick={cc}>CAPTURE</button>\r\n                }\r\n                <button onClick={capt}>CLICK</button><br />\r\n                <button onClick={ca}>SHOW</button><br />\r\n            </div>\r\n            {/* <div>\r\n                <ul>{im && (\r\n                    img.map((a, index) => (\r\n                        <li key={index}>\r\n                            <img src={a} alt=\"Captured\" width={200} />\r\n                        </li>\r\n                    )))\r\n                }\r\n                </ul> */}\r\n            {/* </div> */}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Ff;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACzC,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACV,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMS,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnC,SAASc,IAAIA,CAAA,EAAG;IACZ,IAAIF,EAAE,GAAGH,MAAM,CAACM,OAAO,CAACC,aAAa,CAAC,CAAC;IACvCR,MAAM,CAAES,IAAI,IACR,CAAC,GAAGA,IAAI,EAAEL,EAAE,CAChB,CAAC;EACL;EACA,SAASM,EAAEA,CAAA,EAAG;IACVP,SAAS,CAAC,IAAI,CAAC;EACnB;EACA,SAASQ,EAAEA,CAAA,EAAG;IACVN,KAAK,CAAC,IAAI,CAAC;EACf;EACA,oBACIX,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA;MAAKmB,SAAS,EAAC,IAAI;MAAAD,QAAA,eACflB,OAAA,CAACL,MAAM;QAACyB,KAAK,EAAE,KAAM;QAACC,GAAG,EAAEd;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACNzB,OAAA;MAAKmB,SAAS,EAAC,IAAI;MAAAD,QAAA,GAAC,YACN,eACNlB,OAAA;QAAQ0B,OAAO,EAAEV,EAAG;QAAAE,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEzCzB,OAAA;QAAQ0B,OAAO,EAAEd,IAAK;QAAAM,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAAzB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3CzB,OAAA;QAAQ0B,OAAO,EAAET,EAAG;QAAAC,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAAzB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA,eAYR,CAAC;AAEX;AAACrB,EAAA,CA1CQD,EAAE;AAAAwB,EAAA,GAAFxB,EAAE;AA2CX,eAAeA,EAAE;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}