{"ast":null,"code":"import { Grad } from \"./Grad.js\";\nexport class PerlinNoise {\n  constructor() {\n    this._grad3 = [new Grad(1, 1, 0), new Grad(-1, 1, 0), new Grad(1, -1, 0), new Grad(-1, -1, 0), new Grad(1, 0, 1), new Grad(-1, 0, 1), new Grad(1, 0, -1), new Grad(-1, 0, -1), new Grad(0, 1, 1), new Grad(0, -1, 1), new Grad(0, 1, -1), new Grad(0, -1, -1)];\n    this._p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n    this._gradP = new Array(512);\n    this._perm = new Array(512);\n  }\n  noise2d(x, y) {\n    const {\n      _gradP,\n      _perm\n    } = this;\n    let X = Math.floor(x),\n      Y = Math.floor(y);\n    x = x - X;\n    y = y - Y;\n    X = X & 255;\n    Y = Y & 255;\n    const n00 = _gradP[X + _perm[Y]].dot2(x, y),\n      n01 = _gradP[X + _perm[Y + 1]].dot2(x, y - 1),\n      n10 = _gradP[X + 1 + _perm[Y]].dot2(x - 1, y),\n      n11 = _gradP[X + 1 + _perm[Y + 1]].dot2(x - 1, y - 1);\n    const u = this._fade(x);\n    return this._lerp(this._lerp(n00, n10, u), this._lerp(n01, n11, u), this._fade(y));\n  }\n  noise3d(x, y, z) {\n    const {\n      _gradP: gradP,\n      _perm: perm\n    } = this;\n    let X = Math.floor(x),\n      Y = Math.floor(y),\n      Z = Math.floor(z);\n    x = x - X;\n    y = y - Y;\n    z = z - Z;\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255;\n    const n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z),\n      n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1),\n      n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z),\n      n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1),\n      n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z),\n      n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1),\n      n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z),\n      n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1),\n      u = this._fade(x),\n      v = this._fade(y),\n      w = this._fade(z);\n    return this._lerp(this._lerp(this._lerp(n000, n100, u), this._lerp(n001, n101, u), w), this._lerp(this._lerp(n010, n110, u), this._lerp(n011, n111, u), w), v);\n  }\n  seed(inputSeed) {\n    const {\n      _grad3: grad3,\n      _gradP: gradP,\n      _perm: perm,\n      _p: p\n    } = this;\n    let seed = inputSeed;\n    if (seed > 0 && seed < 1) {\n      seed *= 65536;\n    }\n    seed = Math.floor(seed);\n    if (seed < 256) {\n      seed |= seed << 8;\n    }\n    for (let i = 0; i < 256; i++) {\n      const v = i & 1 ? p[i] ^ seed & 255 : p[i] ^ seed >> 8 & 255;\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n  }\n  _fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n  }\n  _lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n  }\n}","map":{"version":3,"names":["Grad","PerlinNoise","constructor","_grad3","_p","_gradP","Array","_perm","noise2d","x","y","X","Math","floor","Y","n00","dot2","n01","n10","n11","u","_fade","_lerp","noise3d","z","gradP","perm","Z","n000","dot3","n001","n010","n011","n100","n101","n110","n111","v","w","seed","inputSeed","grad3","p","i","t","a","b"],"sources":["C:/Users/sathw/new22.app/client/node_modules/@tsparticles/perlin-noise/browser/PerlinNoise.js"],"sourcesContent":["import { Grad } from \"./Grad.js\";\nexport class PerlinNoise {\n    constructor() {\n        this._grad3 = [\n            new Grad(1, 1, 0),\n            new Grad(-1, 1, 0),\n            new Grad(1, -1, 0),\n            new Grad(-1, -1, 0),\n            new Grad(1, 0, 1),\n            new Grad(-1, 0, 1),\n            new Grad(1, 0, -1),\n            new Grad(-1, 0, -1),\n            new Grad(0, 1, 1),\n            new Grad(0, -1, 1),\n            new Grad(0, 1, -1),\n            new Grad(0, -1, -1),\n        ];\n        this._p = [\n            151,\n            160,\n            137,\n            91,\n            90,\n            15,\n            131,\n            13,\n            201,\n            95,\n            96,\n            53,\n            194,\n            233,\n            7,\n            225,\n            140,\n            36,\n            103,\n            30,\n            69,\n            142,\n            8,\n            99,\n            37,\n            240,\n            21,\n            10,\n            23,\n            190,\n            6,\n            148,\n            247,\n            120,\n            234,\n            75,\n            0,\n            26,\n            197,\n            62,\n            94,\n            252,\n            219,\n            203,\n            117,\n            35,\n            11,\n            32,\n            57,\n            177,\n            33,\n            88,\n            237,\n            149,\n            56,\n            87,\n            174,\n            20,\n            125,\n            136,\n            171,\n            168,\n            68,\n            175,\n            74,\n            165,\n            71,\n            134,\n            139,\n            48,\n            27,\n            166,\n            77,\n            146,\n            158,\n            231,\n            83,\n            111,\n            229,\n            122,\n            60,\n            211,\n            133,\n            230,\n            220,\n            105,\n            92,\n            41,\n            55,\n            46,\n            245,\n            40,\n            244,\n            102,\n            143,\n            54,\n            65,\n            25,\n            63,\n            161,\n            1,\n            216,\n            80,\n            73,\n            209,\n            76,\n            132,\n            187,\n            208,\n            89,\n            18,\n            169,\n            200,\n            196,\n            135,\n            130,\n            116,\n            188,\n            159,\n            86,\n            164,\n            100,\n            109,\n            198,\n            173,\n            186,\n            3,\n            64,\n            52,\n            217,\n            226,\n            250,\n            124,\n            123,\n            5,\n            202,\n            38,\n            147,\n            118,\n            126,\n            255,\n            82,\n            85,\n            212,\n            207,\n            206,\n            59,\n            227,\n            47,\n            16,\n            58,\n            17,\n            182,\n            189,\n            28,\n            42,\n            223,\n            183,\n            170,\n            213,\n            119,\n            248,\n            152,\n            2,\n            44,\n            154,\n            163,\n            70,\n            221,\n            153,\n            101,\n            155,\n            167,\n            43,\n            172,\n            9,\n            129,\n            22,\n            39,\n            253,\n            19,\n            98,\n            108,\n            110,\n            79,\n            113,\n            224,\n            232,\n            178,\n            185,\n            112,\n            104,\n            218,\n            246,\n            97,\n            228,\n            251,\n            34,\n            242,\n            193,\n            238,\n            210,\n            144,\n            12,\n            191,\n            179,\n            162,\n            241,\n            81,\n            51,\n            145,\n            235,\n            249,\n            14,\n            239,\n            107,\n            49,\n            192,\n            214,\n            31,\n            181,\n            199,\n            106,\n            157,\n            184,\n            84,\n            204,\n            176,\n            115,\n            121,\n            50,\n            45,\n            127,\n            4,\n            150,\n            254,\n            138,\n            236,\n            205,\n            93,\n            222,\n            114,\n            67,\n            29,\n            24,\n            72,\n            243,\n            141,\n            128,\n            195,\n            78,\n            66,\n            215,\n            61,\n            156,\n            180,\n        ];\n        this._gradP = new Array(512);\n        this._perm = new Array(512);\n    }\n    noise2d(x, y) {\n        const { _gradP, _perm } = this;\n        let X = Math.floor(x), Y = Math.floor(y);\n        x = x - X;\n        y = y - Y;\n        X = X & 255;\n        Y = Y & 255;\n        const n00 = _gradP[X + _perm[Y]].dot2(x, y), n01 = _gradP[X + _perm[Y + 1]].dot2(x, y - 1), n10 = _gradP[X + 1 + _perm[Y]].dot2(x - 1, y), n11 = _gradP[X + 1 + _perm[Y + 1]].dot2(x - 1, y - 1);\n        const u = this._fade(x);\n        return this._lerp(this._lerp(n00, n10, u), this._lerp(n01, n11, u), this._fade(y));\n    }\n    noise3d(x, y, z) {\n        const { _gradP: gradP, _perm: perm } = this;\n        let X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n        x = x - X;\n        y = y - Y;\n        z = z - Z;\n        X = X & 255;\n        Y = Y & 255;\n        Z = Z & 255;\n        const n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z), n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1), n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z), n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1), n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z), n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1), n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z), n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1), u = this._fade(x), v = this._fade(y), w = this._fade(z);\n        return this._lerp(this._lerp(this._lerp(n000, n100, u), this._lerp(n001, n101, u), w), this._lerp(this._lerp(n010, n110, u), this._lerp(n011, n111, u), w), v);\n    }\n    seed(inputSeed) {\n        const { _grad3: grad3, _gradP: gradP, _perm: perm, _p: p } = this;\n        let seed = inputSeed;\n        if (seed > 0 && seed < 1) {\n            seed *= 65536;\n        }\n        seed = Math.floor(seed);\n        if (seed < 256) {\n            seed |= seed << 8;\n        }\n        for (let i = 0; i < 256; i++) {\n            const v = i & 1 ? p[i] ^ (seed & 255) : p[i] ^ ((seed >> 8) & 255);\n            perm[i] = perm[i + 256] = v;\n            gradP[i] = gradP[i + 256] = grad3[v % 12];\n        }\n    }\n    _fade(t) {\n        return t * t * t * (t * (t * 6 - 15) + 10);\n    }\n    _lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}