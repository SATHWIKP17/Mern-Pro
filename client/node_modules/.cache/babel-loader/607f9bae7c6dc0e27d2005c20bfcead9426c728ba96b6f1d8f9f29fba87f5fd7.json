{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sathw\\\\new22.app\\\\frontend\\\\src\\\\show.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction Sh() {\n  _s();\n  const [mess, setMess] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\n  function on(e) {\n    setMess(prev => [...prev, {\n      text: input,\n      time: new Date().toLocaleTimeString()\n    }]);\n    setInput(\"\");\n    socket.broadcast.emit((\"me\", mess));\n  }\n  function oon(e) {\n    setInput(e.target.value);\n  }\n  useEffect(() => {\n    socket.on(\"receive\", msg => {\n      setMess(prev => [...prev, {\n        text: msg,\n        time: new Date().toLocaleTimeString()\n      }]);\n    });\n    return () => socket.off(\"receive\");\n  }, []);\n  // useEffect(() => {\n  //     socket.on(\"mm\", (msg) => {\n  //         setMess((prev) => [...prev, msg]);\n  //     });\n\n  //     // Cleanup to prevent multiple bindings\n  //     return () => socket.off(\"mm\");\n  // }, []);\n  // const msgg = [\n  //     {\n  //         m: \"Hello This is Sathwik,Hope You Remembered Me\"\n  //     },\n  //     {\n  //         m: \"Hello This is Vignesh,Hope You Remembered Me\"\n  //     },\n  //     {\n  //         m: \"Hello This is Lokesh,Hope You Remembered Me\"\n  //     }\n  // ]\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"hh\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"hd\",\n          children: \"Let's Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), mess.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hh2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hh3\",\n          children: [i.text, /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: \"fff\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: /*#__PURE__*/_jsxDEV(\"sub\", {\n                children: i.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 95\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iii\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"iiiii\",\n          type: \"text\",\n          name: \"input\",\n          value: input,\n          onChange: oon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bb\",\n          type: \"submit\",\n          onClick: on,\n          children: \"\\uD83D\\uDE80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Sh, \"/uSOYpQ7e9nnTzdoaitbVWwZXLE=\");\n_c = Sh;\nexport default Sh;\nvar _c;\n$RefreshReg$(_c, \"Sh\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","Sh","_s","mess","setMess","input","setInput","currentTime","setCurrentTime","Date","toLocaleTimeString","on","e","prev","text","time","broadcast","emit","oon","target","value","msg","off","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","i","index","type","name","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sathw/new22.app/frontend/src/show.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport './App.css';\r\nconst socket = io('http://localhost:3001');\r\nfunction Sh() {\r\n    const [mess, setMess] = useState([]);\r\n    const [input, setInput] = useState(\"\");  \r\n    const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\r\n    function on(e){\r\n        setMess((prev)=>[...prev,{text:input,time:new Date().toLocaleTimeString()}]);\r\n        setInput(\"\");\r\n        socket.broadcast.emit((\"me\",(mess)));\r\n    }\r\n    function oon(e){\r\n        setInput(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        socket.on(\"receive\", (msg) => {\r\n            setMess((prev) => [...prev, { text: msg, time: new Date().toLocaleTimeString() }]);\r\n        });\r\n    \r\n        return () => socket.off(\"receive\");\r\n    }, []); \r\n    // useEffect(() => {\r\n    //     socket.on(\"mm\", (msg) => {\r\n    //         setMess((prev) => [...prev, msg]);\r\n    //     });\r\n\r\n    //     // Cleanup to prevent multiple bindings\r\n    //     return () => socket.off(\"mm\");\r\n    // }, []);\r\n    // const msgg = [\r\n    //     {\r\n    //         m: \"Hello This is Sathwik,Hope You Remembered Me\"\r\n    //     },\r\n    //     {\r\n    //         m: \"Hello This is Vignesh,Hope You Remembered Me\"\r\n    //     },\r\n    //     {\r\n    //         m: \"Hello This is Lokesh,Hope You Remembered Me\"\r\n    //     }\r\n    // ]\r\n    return (\r\n        <>\r\n            <div className=\"dd\">\r\n                <header className=\"hh\"><h1 className=\"hd\">Let's Chat</h1></header>\r\n                <br/>\r\n                {mess.map((i,index)=>(\r\n                    <div className=\"hh2\"><div className=\"hh3\">{i.text}<footer className=\"fff\"><small><sub>{i.time}</sub></small></footer></div></div>))}\r\n                <div className=\"iii\">\r\n                    <input className=\"iiiii\" type=\"text\" name=\"input\" value={input} onChange={oon}/>\r\n                    <button className=\"bb\" type=\"submit\" onClick={on}>ðŸš€</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Sh;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACnB,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAC1C,SAASM,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACV,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAC/E,SAASC,EAAEA,CAACC,CAAC,EAAC;IACVR,OAAO,CAAES,IAAI,IAAG,CAAC,GAAGA,IAAI,EAAC;MAACC,IAAI,EAACT,KAAK;MAACU,IAAI,EAAC,IAAIN,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAAC,CAAC,CAAC,CAAC;IAC5EJ,QAAQ,CAAC,EAAE,CAAC;IACZN,MAAM,CAACgB,SAAS,CAACC,IAAI,EAAE,IAAI,EAAEd,IAAK,CAAC,CAAC;EACxC;EACA,SAASe,GAAGA,CAACN,CAAC,EAAC;IACXN,QAAQ,CAACM,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC;EAC5B;EACA1B,SAAS,CAAC,MAAM;IACZM,MAAM,CAACW,EAAE,CAAC,SAAS,EAAGU,GAAG,IAAK;MAC1BjB,OAAO,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAEO,GAAG;QAAEN,IAAI,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAAE,CAAC,CAAC,CAAC;IACtF,CAAC,CAAC;IAEF,OAAO,MAAMV,MAAM,CAACsB,GAAG,CAAC,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACI1B,OAAA;MAAK2B,SAAS,EAAC,IAAI;MAAAD,QAAA,gBACf1B,OAAA;QAAQ2B,SAAS,EAAC,IAAI;QAAAD,QAAA,eAAC1B,OAAA;UAAI2B,SAAS,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClE/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJzB,IAAI,CAAC0B,GAAG,CAAC,CAACC,CAAC,EAACC,KAAK,kBACdlC,OAAA;QAAK2B,SAAS,EAAC,KAAK;QAAAD,QAAA,eAAC1B,OAAA;UAAK2B,SAAS,EAAC,KAAK;UAAAD,QAAA,GAAEO,CAAC,CAAChB,IAAI,eAACjB,OAAA;YAAQ2B,SAAS,EAAC,KAAK;YAAAD,QAAA,eAAC1B,OAAA;cAAA0B,QAAA,eAAO1B,OAAA;gBAAA0B,QAAA,EAAMO,CAAC,CAACf;cAAI;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE,CAAC,eACvI/B,OAAA;QAAK2B,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAChB1B,OAAA;UAAO2B,SAAS,EAAC,OAAO;UAACQ,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,OAAO;UAACb,KAAK,EAAEf,KAAM;UAAC6B,QAAQ,EAAEhB;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAChF/B,OAAA;UAAQ2B,SAAS,EAAC,IAAI;UAACQ,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAExB,EAAG;UAAAY,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX;AAAC1B,EAAA,CApDQD,EAAE;AAAAmC,EAAA,GAAFnC,EAAE;AAqDX,eAAeA,EAAE;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}